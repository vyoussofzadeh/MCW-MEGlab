%% --- CONFIG ---
subjectDir = '/group/bgross/work/CIDMEG/Analysis/BrainstormProcess/Brainstorm_db/Pilot2_092025/data/mcwa086_v1';
rtCat      = 1;                 % 1=fast, 2=slow, 3=timeout
runs       = unique(T.run(:))'; % or e.g., [2 8]
filePrefix = 'data_2_';         % you said filenames always start with data_2_
useExistingAvg = true;          % set false to recompute average here
avgFileIfExists = fullfile(subjectDir, '@intra', 'data_2_avg_AllRuns_RTfast_fromT.mat'); % adjust per condition

% Time windows (seconds, relative to epoch time vector)
baseWin = [-0.2 0.0];           % baseline for noise covariance
dataWin = [0.30 0.90];          % active window for data covariance (tweak as needed)

% Optional alignment (e.g., E-phys/trigger lag); set to 0 to skip
timeOffsetSec = 0.016;

% Inverse options (LCMV / NAI)
invComment = 'LCMV-NAI (cov from trials; src on avg)';
invStruct = struct( ...
    'Comment',        invComment, ...
    'InverseMethod',  'lcmv', ...
    'InverseMeasure', 'nai', ...
    'SourceOrient',   {{'fixed'}}, ...
    'Loose',          0.2, ...
    'UseDepth',       1, ...
    'WeightExp',      0.5, ...
    'WeightLimit',    10, ...
    'NoiseMethod',    'median', ...
    'NoiseReg',       0.1, ...
    'SnrMethod',      'rms', ...
    'SnrRms',         1e-06, ...
    'SnrFixed',       3, ...
    'ComputeKernel',  1, ...
    'DataTypes',      {{'MEG GRAD','MEG MAG'}});

%% --- Collect the exact trial files from T (matching rt_category & selected runs)
trialFiles = {};
miss = 0;
for r = runs
    runDir = find_run_dir(subjectDir, r);
    if isempty(runDir), fprintf('RUN %d: folder not found.\n', r); continue; end
    rows = T(T.run == r & T.rt_category == rtCat, :);
    for t = rows.trial(:)'
        fn = fullfile(runDir, sprintf('%strial%03d.mat', filePrefix, t));
        if isfile(fn)
            trialFiles{end+1} = fn; %#ok<AGROW>
        else
            fprintf('  MISSING: %s\n', fn); miss = miss+1;
        end
    end
end
fprintf('Trials gathered: %d (missing %d)\n', numel(trialFiles), miss);
if isempty(trialFiles), error('No trial files found.'); end

%% --- 1) Noise covariance from baseline
bst_report('Start', {});
sNoise = bst_process('CallProcess', 'process_noisecov', trialFiles, [], ...
    'baseline',       baseWin, ...
    'datatimewindow', [], ...
    'sensortypes',    'MEG', ...
    'target',         1, ...  % 1 = Noise covariance (baseline)
    'dcoffset',       1, ...
    'identity',       0, ...
    'copycond',       0, ...
    'copysubj',       0, ...
    'copymatch',      0, ...
    'replacefile',    1);

%% --- 2) Data covariance from active window
sData = bst_process('CallProcess', 'process_noisecov', trialFiles, [], ...
    'baseline',       [], ...
    'datatimewindow', dataWin, ...
    'sensortypes',    'MEG', ...
    'target',         2, ...  % 2 = Data covariance (active window)
    'dcoffset',       1, ...
    'identity',       0, ...
    'copycond',       0, ...
    'copysubj',       0, ...
    'copymatch',      0, ...
    'replacefile',    1);

%% --- 3) Average the same trials (or use existing average)
if ~useExistingAvg
    sAvg = bst_process('CallProcess', 'process_average', trialFiles, [], ...
        'avgtype',         1, ...  % 1=Everything: average all inputs
        'avg_func',        1, ...  % arithmetic mean
        'weighted',        0, ...
        'scalenormalized', 0);
    avgFiles = sAvg;  % keep as cell
else
    avgFiles = {avgFileIfExists}; % path to your precomputed average for this condition
end

%% --- 4) Optional: time offset on the average
if timeOffsetSec ~= 0
    avgFiles = bst_process('CallProcess', 'process_timeoffset', avgFiles, [], ...
        'info',      [], ...
        'offset',    timeOffsetSec, ...
        'overwrite', 0);
end

%% --- IMPORTANT: Head model selection
% Ensure the subject default head model is the one you want (e.g., Run02).
% Easiest: in GUI, right-click the headmodel from Run02 -> "Use as default head model".
% Then this inverse step will use it automatically.

%% --- 5) Compute sources on the average using LCMV (with the covariances stored above)
sSrc = bst_process('CallProcess', 'process_inverse_2018', avgFiles, [], ...
    'output',   2, ...     % 2 = Full results (one per file)
    'inverse',  invStruct, ...
    'sensortypes','MEG', ...
    'overwrite', 1);

bst_report('Save', sSrc);

%% --- Helpers ---
function runDir = find_run_dir(subjectDir, runNo)
    d = dir(fullfile(subjectDir, sprintf('*_Run_%02d', runNo)));
    if isempty(d), runDir = ''; else, runDir = fullfile(d(1).folder, d(1).name); end
end
